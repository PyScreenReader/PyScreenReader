line-length = 100

# Assume Python 3.11, since we primarily use 3.11 as the dev version
target-version = "py311"

[lint]
select = ["ALL"]

# Disabled checks for entire codebase:
# N813: PyScreenReader is often imported as `psr` in test cases
# INP001: __init__.py is not used since everything is managed by bazel
# S101: For pytest, we use `assert` to provide assertions
# FBT001: Allow taking boolean as a positional argument to the function
# FBT002: It's a common practice to use boolean default positional argument
# PERF401: We don't enforce list.extend over list.append + for loop, for loops can perform additional logic
# D211: This conflicts with D203, so disbaled
# D213: This conflicts with D212, so disabled
ignore = ["N813", "INP001", "S101", "FBT001", "FBT002", "PERF401", "D211", "D213", "D203"]

[lint.per-file-ignores]
# Disabled checks for tool scripts:
# T201: Allow print statements in tool scripts
# S603: Allow subprocess call in tool scripts
# S607: For tool scripts, sometimes a command lookup through system is necessary,
#       therefore, starting a process with a partial executable path is okay
# SIM108: there should be no reason to encourage the use of ternary rather than if-else
"tools/*.py" = ["T201", "S603", "S607", "SIM108"]

# Disabled checks for Sphinx config script
# A001: `copyright` field shadows a python module, but is also required by Sphinx.
"doc/source/conf.py" = ["A001"]

# Disabled checks for entire
# ANN201: it's okay to not have `-> None` in test cases
# D100: it's okay to not have docstrings on test modules
# D103: it's okay to not have a docstring on test assertions (their name should be clear enough)
# PLR2004: occasional usage of magic number is fine in unit tests
# BLE001: for test purposes, sometimes it is easier to catch all exceptions to assert no exceptions happened
# T201: `print` statement is temporarily allowed before we finalize our test cases
"tests/py/*.py" = ["ANN201", "D100", "D103", "PLR2004", "BLE001", "T201"]
